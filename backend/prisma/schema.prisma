// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  userHandle        String    @unique
  githubHandle      String    @unique
  encryptedPassword String
  firstName         String
  lastName          String
  profilePicture    String    @default("")
  businessAccount   Boolean   @default(false)
  featuredProjects  String[]  @default([])

  posts             Post[]
  comments          Comment[]
  chatSenders       Chat[]    @relation(name: "chat sender")
  chatRecipients    Chat[]    @relation(name: "chat recipient")
}

model Post {
  id                Int       @id @default(autoincrement())
  mediaURLs         String[]
  tags              String[]
  title             String
  date              String
  timestamp         String
  text              String

  authorID          Int
  author            User      @relation(fields: [authorID], references: [id])

  comments          Comment[]
}

model Comment {
  id                Int       @id @default(autoincrement())
  commentText       String
  date              String
  timestamp         String
  likes             Int       @default(0)
  childComments     Comment[] @relation(name: "replies")

  parentCommentID   Int
  parentComment     Comment   @relation(fields: [parentCommentID], references: [id], name: "replies")

  postID            Int
  post              Post      @relation(fields: [postID], references: [id])

  authorID          Int
  author            User      @relation(fields: [authorID], references: [id])
}

model Chat {
  id                Int       @id @default(autoincrement())

  senderID          Int
  sender            User      @relation(fields: [senderID], references: [id], name: "chat sender")

  recipientID       Int
  recipient         User      @relation(fields: [recipientID], references: [id], name: "chat recipient")

  messages          Message[]
}

model Message {
  id                Int       @id @default(autoincrement())
  text              String
  date              String
  timestamp         String

  chatID            Int
  chat              Chat      @relation(fields: [chatID], references: [id])
}
